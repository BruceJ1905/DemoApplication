apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.bruce.demoapplication"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }

        flavorDimensions "versionCode"
    }

    signingConfigs {

        debug_sign {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
            v2SigningEnabled false
        }

        reader_sign {
            keyAlias 'iqiyireader'
            keyPassword 'I*ftnQ@27'
            storeFile file('/Users/bruce/develop/key/QiyiReaderReleaseKey')
            storePassword 'I*ftnQ@27'
            v2SigningEnabled false

        }
    }

    buildTypes {
//        debug {
//            signingConfig signingConfigs.debug_sign
//        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.reader_sign
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    dataBinding {
        enabled = true;
    }
    productFlavors {
        wandoujia {}
        baidu {}
        xiaomi {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name] //动态地修改AndroidManifest中的渠道名
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == "debug") {
                outputFileName = "Reader-Android-${variant.buildType.name}-${variant.versionName}-debug.apk"
            } else {
                def buildTime = currentTime()
                outputFileName = "Reader-Android-${variant.buildType.name}-${variant.versionName}-${buildTime}.apk"
            }
        }
    }
}

static def currentTime() {
    return new Date().format("yyyy-MM-dd-HH-mm-ss", TimeZone.getTimeZone("GMT+08:00"))
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation project(':module2')
    implementation project(':module3')
}
